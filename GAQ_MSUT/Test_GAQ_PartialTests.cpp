#include "CppUnitTest.h"
#include "GAQ.h"
#include <numbers>

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace GAQ_MSUT
{
	TEST_CLASS(GAQ_Partial)
	{
	public:

		TEST_METHOD(Test_ToNumeric)
		{
			GAQ::GenerateGeneratingBlades();

			GAQ a = 2 * e1 * e2 + 3 * e1 * e2 * e3;
			GAQ b = -7 * one + 2 * e1 * e2 + 3 * e1 * e2 * e3;
			GAQ c;

			Assert::IsTrue(a.ToNumeric() == 1.0);
			Assert::IsTrue(b.ToNumeric() == - 7.0);
			Assert::IsTrue(c.ToNumeric() == 0.0);
		}

		TEST_METHOD(Test_RotorExponential)
		{
			GAQ::GenerateGeneratingBlades();

			GAQ rotorXY = rxy.RotorExponential(20, std::numbers::pi / 4);

			GAQ expected =
				0.39429025373762072 * one
				+ 0.16332037060753438 * (e1 * e2)
				- 0.16332037060929533 * (e1 * e2 * e11 * e13)
				+ 0.067649512520283811 * (e1 * e2 * e11 * e13 * e14 * e15)
				- 0.040830092652323832 * (e1 * e2 * e12 * e13)
				+ 0.016912378130070953 * (e1 * e2 * e12 * e13 * e14 * e15)
				- 0.067649512518023203 * (e1 * e2 * e14 * e15)
				+ 0.040830092652889921 * (e1 * e2 * e5 * e6 * e7 * e13)
				- 0.016912378129631506 * (e1 * e2 * e5 * e6 * e7 * e13 * e14 * e15)
				+ 0.016912378129631506 * (e1 * e2 * e5 * e6 * e7 * e8 * e9 * e13)
				- 0.0070053363927480138 * (e1 * e2 * e5 * e6 * e7 * e8 * e9 * e13 * e14 * e15)
				+ 0.16332037060929533 * (e1 * e2 * e5 * e7)
				- 0.16332037061155971 * (e1 * e2 * e5 * e7 * e11 * e13)
				+ 0.067649512518526023 * (e1 * e2 * e5 * e7 * e11 * e13 * e14 * e15)
				- 0.040830092652889928 * (e1 * e2 * e5 * e7 * e12 * e13)
				+ 0.016912378129631506 * (e1 * e2 * e5 * e7 * e12 * e13 * e14 * e15)
				- 0.067649512520283811 * (e1 * e2 * e5 * e7 * e14 * e15)
				+ 0.067649512520283825 * (e1 * e2 * e5 * e7 * e8 * e9)
				- 0.067649512518526023 * (e1 * e2 * e5 * e7 * e8 * e9 * e11 * e13)
				+ 0.028021345570992055 * (e1 * e2 * e5 * e7 * e8 * e9 * e11 * e13 * e14 * e15)
				- 0.016912378129631506 * (e1 * e2 * e5 * e7 * e8 * e9 * e12 * e13)
				+ 0.0070053363927480138 * (e1 * e2 * e5 * e7 * e8 * e9 * e12 * e13 * e14 * e15)
				- 0.028021345573248927 * (e1 * e2 * e5 * e7 * e8 * e9 * e14 * e15)
				- 0.040830092652323832 * (e1 * e2 * e6 * e13)
				+ 0.016912378130070953 * (e1 * e2 * e6 * e13 * e14 * e15)
				+ 0.040830092652323832 * (e1 * e2 * e6 * e7)
				- 0.040830092652889928 * (e1 * e2 * e6 * e7 * e11 * e13)
				+ 0.016912378129631506 * (e1 * e2 * e6 * e7 * e11 * e13 * e14 * e15)
				- 0.016912378130070953 * (e1 * e2 * e6 * e7 * e14 * e15)
				+ 0.016912378130070956 * (e1 * e2 * e6 * e7 * e8 * e9)
				- 0.016912378129631506 * (e1 * e2 * e6 * e7 * e8 * e9 * e11 * e13)
				+ 0.0070053363927480138 * (e1 * e2 * e6 * e7 * e8 * e9 * e11 * e13 * e14 * e15)
				- 0.0070053363933122318 * (e1 * e2 * e6 * e7 * e8 * e9 * e14 * e15)
				- 0.016912378130070956 * (e1 * e2 * e6 * e8 * e9 * e13)
				+ 0.0070053363933122318 * (e1 * e2 * e6 * e8 * e9 * e13 * e14 * e15)
				- 0.040830092652889928 * (e1 * e2 * e7 * e11 * e12 * e13)
				+ 0.016912378129631506 * (e1 * e2 * e7 * e11 * e12 * e13 * e14 * e15)
				- 0.040830092652323832 * (e1 * e2 * e7 * e12)
				+ 0.016912378130070953 * (e1 * e2 * e7 * e12 * e14 * e15)
				- 0.016912378129631506 * (e1 * e2 * e7 * e8 * e9 * e11 * e12 * e13)
				+ 0.0070053363927480138 * (e1 * e2 * e7 * e8 * e9 * e11 * e12 * e13 * e14 * e15)
				- 0.016912378130070956 * (e1 * e2 * e7 * e8 * e9 * e12)
				+ 0.0070053363933122318 * (e1 * e2 * e7 * e8 * e9 * e12 * e14 * e15)
				+ 0.067649512518023203 * (e1 * e2 * e8 * e9)
				- 0.067649512520283825 * (e1 * e2 * e8 * e9 * e11 * e13)
				+ 0.028021345573248927 * (e1 * e2 * e8 * e9 * e11 * e13 * e14 * e15)
				- 0.016912378130070956 * (e1 * e2 * e8 * e9 * e12 * e13)
				+ 0.0070053363933122318 * (e1 * e2 * e8 * e9 * e12 * e13 * e14 * e15)
				- 0.028021345575003562 * (e1 * e2 * e8 * e9 * e14 * e15)
				- 0.39429025373535265 * (e11 * e13)
				+ 0.16332037060929530 * (e11 * e13 * e14 * e15)
				- 0.098572563433838162 * (e12 * e13)
				+ 0.040830092652323825 * (e12 * e13 * e14 * e15)
				- 0.16332037060753440 * (e14 * e15)
				+ 0.098572563434279198 * (e5 * e6 * e7 * e13)
				- 0.040830092652889921 * (e5 * e6 * e7 * e13 * e14 * e15)
				+ 0.040830092652889928 * (e5 * e6 * e7 * e8 * e9 * e13)
				- 0.016912378129631506 * (e5 * e6 * e7 * e8 * e9 * e13 * e14 * e15)
				+ 0.39429025373535265 * (e5 * e7)
				- 0.39429025373711679 * (e5 * e7 * e11 * e13)
				+ 0.16332037061155968 * (e5 * e7 * e11 * e13 * e14 * e15)
				- 0.098572563434279198 * (e5 * e7 * e12 * e13)
				+ 0.040830092652889921 * (e5 * e7 * e12 * e13 * e14 * e15)
				- 0.16332037060929530 * (e5 * e7 * e14 * e15)
				+ 0.16332037060929533 * (e5 * e7 * e8 * e9)
				- 0.16332037061155971 * (e5 * e7 * e8 * e9 * e11 * e13)
				+ 0.067649512518526023 * (e5 * e7 * e8 * e9 * e11 * e13 * e14 * e15)
				- 0.040830092652889928 * (e5 * e7 * e8 * e9 * e12 * e13)
				+ 0.016912378129631506 * (e5 * e7 * e8 * e9 * e12 * e13 * e14 * e15)
				- 0.067649512520283825 * (e5 * e7 * e8 * e9 * e14 * e15)
				- 0.098572563433838134 * (e6 * e13)
				+ 0.040830092652323825 * (e6 * e13 * e14 * e15)
				+ 0.098572563433838134 * (e6 * e7)
				- 0.098572563434279198 * (e6 * e7 * e11 * e13)
				+ 0.040830092652889921 * (e6 * e7 * e11 * e13 * e14 * e15)
				- 0.040830092652323825 * (e6 * e7 * e14 * e15)
				+ 0.040830092652323832 * (e6 * e7 * e8 * e9)
				- 0.040830092652889928 * (e6 * e7 * e8 * e9 * e11 * e13)
				+ 0.016912378129631506 * (e6 * e7 * e8 * e9 * e11 * e13 * e14 * e15)
				- 0.016912378130070956 * (e6 * e7 * e8 * e9 * e14 * e15)
				- 0.040830092652323832 * (e6 * e8 * e9 * e13)
				+ 0.016912378130070956 * (e6 * e8 * e9 * e13 * e14 * e15)
				- 0.098572563434279184 * (e7 * e11 * e12 * e13)
				+ 0.040830092652889921 * (e7 * e11 * e12 * e13 * e14 * e15)
				- 0.098572563433838162 * (e7 * e12)
				+ 0.040830092652323825 * (e7 * e12 * e14 * e15)
				- 0.040830092652889921 * (e7 * e8 * e9 * e11 * e12 * e13)
				+ 0.016912378129631506 * (e7 * e8 * e9 * e11 * e12 * e13 * e14 * e15)
				- 0.040830092652323832 * (e7 * e8 * e9 * e12)
				+ 0.016912378130070956 * (e7 * e8 * e9 * e12 * e14 * e15)
				+ 0.16332037060753438 * (e8 * e9)
				- 0.16332037060929533 * (e8 * e9 * e11 * e13)
				+ 0.067649512520283825 * (e8 * e9 * e11 * e13 * e14 * e15)
				- 0.040830092652323832 * (e8 * e9 * e12 * e13)
				+ 0.016912378130070956 * (e8 * e9 * e12 * e13 * e14 * e15)
				- 0.067649512518023203 * (e8 * e9 * e14 * e15);

			Assert::IsTrue(rotorXY == expected);
		}
	};
}
